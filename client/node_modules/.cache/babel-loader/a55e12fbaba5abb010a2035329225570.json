{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (error) {} // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //       if (userAuth) {\n  //         const userRef = await createUserProfileDocument(userAuth);\n  //         userRef.onSnapshot(snapshot => {\n  //           setCurrentUser({\n  //             id: snapshot.id,\n  //             ...snapshot.data()\n  //           });\n  //         });\n  //       } else {\n  //         setCurrentUser(userAuth);\n  //       }\n  //     });\n\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["E:/Web Development Udemy/React 2020 (Andrei & Yihua)/chr-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","createUserProfileDocument","googleProvider","signInWithGoogle","userRef","signInWithPopup","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMJ,IAAI,CAACK,eAAL,CAAqBH,cAArB,CAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc,CAAE,CAJgB,CAMlC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACD;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMd,UAAU,CAACI,eAAe,CAACW,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUQ,SAAV,GAAsB;AAC3B,QAAMd,GAAG,CAAC,CAACC,IAAI,CAACW,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  createUserProfileDocument,\r\n  googleProvider\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const userRef = yield auth.signInWithPopup(googleProvider);\r\n    console.log(userRef);\r\n  } catch (error) {}\r\n\r\n  // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\r\n  //       if (userAuth) {\r\n  //         const userRef = await createUserProfileDocument(userAuth);\r\n\r\n  //         userRef.onSnapshot(snapshot => {\r\n  //           setCurrentUser({\r\n  //             id: snapshot.id,\r\n  //             ...snapshot.data()\r\n  //           });\r\n  //         });\r\n  //       } else {\r\n  //         setCurrentUser(userAuth);\r\n  //       }\r\n\r\n  //     });\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyC9UGsaBzWppvT5ulbD1ebObqDknpeMhro\",\n  authDomain: \"chr-db-b1b85.firebaseapp.com\",\n  databaseURL: \"https://chr-db-b1b85.firebaseio.com\",\n  projectId: \"chr-db-b1b85\",\n  storageBucket: \"chr-db-b1b85.appspot.com\",\n  messagingSenderId: \"542990001282\",\n  appId: \"1:542990001282:web:cd3e37498f1e679587409b\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = userRef.get();\n\n  if (!snapshot.exist) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating data');\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/Web Development Udemy/React 2020 (Andrei & Yihua)/chr-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exist","displayName","email","createdAt","Date","set","error","console","log","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAWAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AACxE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAGJ,OAAO,CAACK,GAAR,EAAjB;;AAEA,MAAG,CAACD,QAAQ,CAACE,KAAb,EAAmB;AACf,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAOa,KAAP,EAAa;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH;AACJ;;AAED,SAAOd,OAAP;AACH,CAxBM;AA0BP,OAAO,MAAMe,yBAAyB,GAAG,OAAMC,aAAN,EAAqBC,YAArB,KAAsC;AAC3E,QAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGnB,SAAS,CAACmB,KAAV,EAAd;AAEAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGL,aAAa,CAAChB,GAAd,EAAlB;AACAkB,IAAAA,KAAK,CAACT,GAAN,CAAUY,SAAV,EAAqBD,GAArB;AACH,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACH,CAXM;AAcP,OAAO,MAAMC,IAAI,GAAGtC,QAAQ,CAACsC,IAAT,EAAb;AACP,OAAO,MAAMxB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMyB,QAAQ,GAAG,IAAIvC,QAAQ,CAACsC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAevC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyC9UGsaBzWppvT5ulbD1ebObqDknpeMhro\",\r\n    authDomain: \"chr-db-b1b85.firebaseapp.com\",\r\n    databaseURL: \"https://chr-db-b1b85.firebaseio.com\",\r\n    projectId: \"chr-db-b1b85\",\r\n    storageBucket: \"chr-db-b1b85.appspot.com\",\r\n    messagingSenderId: \"542990001282\",\r\n    appId: \"1:542990001282:web:cd3e37498f1e679587409b\"\r\n  };\r\n\r\n  \r\nfirebase.initializeApp(config)  \r\n\r\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n\r\n    const snapshot = userRef.get();\r\n\r\n    if(!snapshot.exist){\r\n        const {displayName, email} = userAuth\r\n        const createdAt = new Date()\r\n\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        }catch (error){\r\n            console.log('error creating data')\r\n        }\r\n    }\r\n\r\n    return userRef\r\n}\r\n\r\nexport const addCollectionAndDocuments = async(collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey)\r\n\r\n    const batch = firestore.batch();\r\n\r\n    objectsToAdd.forEach(obj => {\r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj)\r\n    })\r\n\r\n    return await batch.commit()\r\n}\r\n\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt: 'select_account'})\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase\r\n"]},"metadata":{},"sourceType":"module"}